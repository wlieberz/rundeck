---

- name: Ensure Java runtime
  become: true
  ansible.builtin.yum:
    name: "{{ rundeck_java_pkg }}"
    state: present

- name: Ensure rundeck repo
  become: true
  ansible.builtin.copy:
    src: rundeck.repo_rpm
    dest: /etc/yum.repos.d/rundeck.repo

- name: Ensure rundeck installed
  become: true
  ansible.builtin.yum:
    name: rundeck
    state: present

- name: Ensure rundeck http port open
  become: true
  ansible.posix.firewalld:
    port: "{{ rundeck_http_port }}/tcp"
    permanent: yes
    state: "{{ rundeck_http_port_state }}"
  notify:
  - reload firewalld
  when: host_firewall_enabled == "True"

- name: Ensure rundeck https port open
  become: true
  ansible.posix.firewalld:
    port: "{{ rundeck_https_port }}/tcp"
    permanent: yes
    state: "{{ rundeck_https_port_state }}"
  notify:
  - reload firewalld
  when: host_firewall_enabled == "True"

- name: Ensure /etc/rundeck/rundeck-config.properties grails.serverURL
  become: true
  ansible.builtin.lineinfile:
    path: /etc/rundeck/rundeck-config.properties
    line: "grails.serverURL=http://{{ ansible_fqdn }}"
    regexp: '^grails.serverURL'
    state: present
  notify:
  - restart rundeck

- name: Ensure /etc/rundeck/framework.properties framework.server.name
  become: true
  ansible.builtin.lineinfile:
    path: /etc/rundeck/framework.properties
    line: "framework.server.name = {{ ansible_fqdn }}"
    regexp: '^framework.server.name'
    state: present
    backrefs: yes
  notify:
  - restart rundeck

- name: Ensure /etc/rundeck/framework.properties framework.server.hostname
  become: true
  ansible.builtin.lineinfile:
    path: /etc/rundeck/framework.properties
    line: "framework.server.hostname = {{ ansible_fqdn }}"
    regexp: '^framework.server.hostname'
    state: present
    backrefs: yes
  notify:
  - restart rundeck

- name: Ensure /etc/rundeck/framework.properties framework.server.url
  become: true
  ansible.builtin.lineinfile:
    path: /etc/rundeck/framework.properties
    line: "framework.server.url = https://{{ ansible_fqdn }}"
    regexp: '^framework.server.url'
    state: present
    backrefs: yes
  notify:
  - restart rundeck

- name: Ensure /etc/rundeck/framework.properties grails.serverURL
  become: true
  ansible.builtin.lineinfile:
    path: /etc/rundeck/framework.properties
    line: "grails.serverURL = https://{{ ansible_fqdn }}"
    insertafter: "framework.server.url"
    state: present
  notify:
  - restart rundeck

- name: Ensure rundeck service
  become: true
  ansible.builtin.service:
    name: rundeckd
    enabled: yes
    state: started

- name: Ensure EPEL repo
  become: true
  ansible.builtin.command:
    cmd: yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    creates: /etc/yum.repos.d/epel.repo

- name: Ensure self-signed TLS cert
  block:
    - name: Ensure nginx cert dir
      become: true
      ansible.builtin.file:
        path: /etc/pki/nginx
        state: directory
        owner: root
        group: root
        mode: '0750'

    - name: Ensure csr-conf
      become: true
      ansible.builtin.template:
        src: testing_csr-conf.cnf.j2
        dest: /etc/pki/nginx/csr-conf.cnf

    - name: Generate self-signed cert
      become: true
      ansible.builtin.script:
        cmd: generate-self-signed-tls-cert-and-key.sh
        chdir: /etc/pki/nginx
        creates: /etc/pki/nginx/server.crt
  when: use_self_signed_cert == "True"

- name: Ensure TLS cert
  block:
    - name: real tls cert stub task
      ansible.builtin.debug:
        msg: "Stub task/block to configure real TLS cert."
  when: use_self_signed_cert == "False"

- name: Ensure nginx installed
  become: true
  ansible.builtin.yum:
    name: nginx
    state: present

- name: Ensure nginx conf
  become: true
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
  - restart nginx

- name: Ensure nginx service
  become: true
  ansible.builtin.service:
    name: nginx
    enabled: yes
    state: started
